# Hash
key1 value1 [only strings numbers]
key2 value2

> Hashes cannot have deeply nested Structure

# Storing and retrieving Hashes in Redis

HSET company [name of the key to store this Hash at]
    name "company co"
    age 1915

HSET company name "company co" age 1915 [returns n > n key value pairs here 2]
> can add any number of key value pairs as we want

HSET user name "John Doe" age 23 profession "Software Engineer" [returns 3]

HGET user name [ get the user hash and value of key name ]
HGETALL user [ get all the value stored in user HASH ]


# Deleting HASH data

HEXISTS [ does the key exists in the hash 1 or 0 ]
HEXISTS company name

DEL [ deletes the hash stored at a particular key ]
DEL company

HGETALL company [null]

HDEL [ delete a single key-value pair stored in a hash ]
HDEL company age [ deletes age key value from the company hash ]


# Numbers in Hashes
HINCRBY company age 10 [ increase the age of company by 10 ]
HINCRBYFLOAT company 6.9
> if there is no key then new key will be created automatically and its value will be set

HSTRLEN company name [ number of strings ]
HKEYS company [ list of keys ]
HVALS company [ list of values ]

> donot store null, undefined values in hashes instead put null || '' and undefined || ''
> when hgetall for the hash which does not exist we will get empty object instead of null