# sorted sets

> icecream
______________________
| member   | score   |
|___________________
| chocolate |  -4    |
| strawberry|  2.00  |
_____________________

> A mix of hashes and sets
> no keys and values. There are members and scores
> Members are guaranteed to be unique
> Scores dont have to be unique but should be number
> Scores are sorted from least to greatest ( top down )

# Adding and removing members in a sorted sets
> ZADD [ add a member score pair to a sorted set ]
    ZADD products 45 monitor [ setname score member ]
> ZSCORE [ get the score of a member ]
    ZSCORE products monitor

> ZREM [ remove a member from a sorted set ]
    ZREM products monitor
    ZSCORE products monitor [ null ]

# like in strings there are multiple arguments we can pass in ZADD like expiry or any conditions to check prior to the addition


# Find the range 
> ZCARD [ total numbers of members in a sorted set ]
    ZCARD products 

> ZCOUNT [ how many members are in certain numbers ]
    ZCOUNT products 0 50 [ how many members are in between 0 and 50 upto and including ]

    ZCOUNT products (0 (50 [ 0 < score < 50]
    ZCOUNT products 0 50 [  <= score <= 50 ]

    ZCOUNT products -inf +inf [ get all ]
    ZCOUNT products 15 +inf [ score >= 15]

# pop min and max
> ZPOPMIN products 1(optional) [ remove 1 lowest score members ]

> ZPOPMAX products 2(optional) [ remove 2 highest score members ]

# Updating score
> ZINCRBY key 15 member
> ZINCRBY products 15 chair
> ZINCRBY products -15 chair
> After the command redis will automatically sort the list

# Querying the sorted set
> ZRANGE products 1 2 WITHSCORES(optional) [sorted_set min_indx max_indx include_score]

> ZRANGE products 0 100 BYSCORE WITHSCORES [ query by score : starting at score 0 upto including 100 ]

> ZRANGE [ retrieve a range of members and score ]
> ZRANGE products 1 2 REV LIMIT 1 2 
        [set min_indx max_indx reverse_order skip_first_element_then_give_the_next_two]

> ZRANGE products 0 100 BYSCORE LIMIT 1 2 [1:skip the first element and 2: give the next two result set ]